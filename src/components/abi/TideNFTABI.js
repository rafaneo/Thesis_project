export const NFTABI = [
  'constructor()',
  'event Approval(address indexed,address indexed,uint256 indexed)',
  'event ApprovalForAll(address indexed,address indexed,bool)',
  'event Transfer(address indexed,address indexed,uint256 indexed)',
  'function approve(address,uint256)',
  'function balanceOf(address) view returns (uint256)',
  'function createToken(string,uint256) payable returns (uint256)',
  'function executeSale(uint256) payable',
  'function getAllNFTs() view returns (tuple(uint256,uint256,address,address,bool)[])',
  'function getApproved(uint256) view returns (address)',
  'function getCurrentTokenId() view returns (uint256)',
  'function getLatestIdOfListedToken() view returns (tuple(uint256,uint256,address,address,bool))',
  'function getListedForTokenId(uint256) view returns (tuple(uint256,uint256,address,address,bool))',
  'function getListingPrice() view returns (uint256)',
  'function getMyNFTS() view returns (tuple(uint256,uint256,address,address,bool)[])',
  'function isApprovedForAll(address,address) view returns (bool)',
  'function listPrice() view returns (uint256)',
  'function name() view returns (string)',
  'function ownerOf(uint256) view returns (address)',
  'function safeTransferFrom(address,address,uint256)',
  'function safeTransferFrom(address,address,uint256,bytes)',
  'function setApprovalForAll(address,bool)',
  'function supportsInterface(bytes4) view returns (bool)',
  'function symbol() view returns (string)',
  'function tokenURI(uint256) view returns (string)',
  'function transferFrom(address,address,uint256)',
  'function updateListingPrice(uint256)',
];
